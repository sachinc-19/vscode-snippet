{
	// Place your cpp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "custom_hash",
		"body": [
			"struct custom_hash {                                                                                 ",
			"   static uint64_t splitmix64(uint64_t x) {",
			"       // http://xorshift.di.unimi.it/splitmix64.c",
			"       x += 0x9e3779b97f4a7c15;",
			"       x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;",
			"       x = (x ^ (x >> 27)) * 0x94d049bb133111eb;",
			"       return x ^ (x >> 31);",
			"   }",
			"",
			"   size_t operator()(uint64_t x) const {",
			"       static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();",
			"       return splitmix64(x + FIXED_RANDOM);",
			"   }",
			"};",
			// "console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
}